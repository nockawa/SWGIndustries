// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWGIndustries.Data;

#nullable disable

namespace SWGIndustries.data.migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250322022944_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("SWGIndustries.Data.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CrewId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ThemeMode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("SWGIndustries.Data.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CrewLeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CrewLeaderId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FromUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("InviteOrRequestToJoin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("ToUserId");

                    b.ToTable("CrewInvitations");
                });

            modelBuilder.Entity("SWGIndustries.Data.SWGAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerApplicationUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerApplicationUserId");

                    b.ToTable("SWGAccounts");
                });

            modelBuilder.Entity("SWGIndustries.Data.SWGCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCrewMember")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SWGAccountId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SWGAccountId");

                    b.ToTable("SWGCharacters");
                });

            modelBuilder.Entity("SWGIndustries.Data.ApplicationUser", b =>
                {
                    b.HasOne("SWGIndustries.Data.Crew", "Crew")
                        .WithMany("Members")
                        .HasForeignKey("CrewId");

                    b.Navigation("Crew");
                });

            modelBuilder.Entity("SWGIndustries.Data.Crew", b =>
                {
                    b.HasOne("SWGIndustries.Data.ApplicationUser", "CrewLeader")
                        .WithMany()
                        .HasForeignKey("CrewLeaderId");

                    b.Navigation("CrewLeader");
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewInvitation", b =>
                {
                    b.HasOne("SWGIndustries.Data.ApplicationUser", "FromUser")
                        .WithMany()
                        .HasForeignKey("FromUserId");

                    b.HasOne("SWGIndustries.Data.ApplicationUser", "ToUser")
                        .WithMany()
                        .HasForeignKey("ToUserId");

                    b.Navigation("FromUser");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("SWGIndustries.Data.SWGAccount", b =>
                {
                    b.HasOne("SWGIndustries.Data.ApplicationUser", "OwnerApplicationUser")
                        .WithMany("SWGAccounts")
                        .HasForeignKey("OwnerApplicationUserId");

                    b.Navigation("OwnerApplicationUser");
                });

            modelBuilder.Entity("SWGIndustries.Data.SWGCharacter", b =>
                {
                    b.HasOne("SWGIndustries.Data.SWGAccount", "SWGAccount")
                        .WithMany("SWGCharacters")
                        .HasForeignKey("SWGAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SWGAccount");
                });

            modelBuilder.Entity("SWGIndustries.Data.ApplicationUser", b =>
                {
                    b.Navigation("SWGAccounts");
                });

            modelBuilder.Entity("SWGIndustries.Data.Crew", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("SWGIndustries.Data.SWGAccount", b =>
                {
                    b.Navigation("SWGCharacters");
                });
#pragma warning restore 612, 618
        }
    }
}
