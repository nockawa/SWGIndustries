// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SWGIndustries.Data;

#nullable disable

namespace SWGIndustries.data.migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250416071923_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SWGIndustries.Data.AppAccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("CrewId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("SWGServerName")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("ThemeMode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CorrelationId")
                        .IsUnique();

                    b.HasIndex("CrewId");

                    b.ToTable("AppAccounts", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.BuildingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("BuildingForCrew")
                        .HasColumnType("boolean");

                    b.Property<int?>("ClusterId")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("FullClass")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("HarvesterBER")
                        .HasColumnType("integer");

                    b.Property<int>("HarvesterHopperSize")
                        .HasColumnType("integer");

                    b.Property<bool>("HarvesterSelfPowered")
                        .HasColumnType("boolean");

                    b.Property<int?>("HarvestingResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("HarvestingResourceType")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastRunningDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastStoppedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaintenanceAmount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("MaintenanceLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("PowerAmount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PowerLastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PutDownById")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PutDownDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PutDownPlanet")
                        .HasColumnType("integer");

                    b.Property<float>("ResourceConcentration")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("FullClass");

                    b.HasIndex("HarvestingResourceId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PutDownById");

                    b.ToTable("Buildings", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.CharacterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GameAccountId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCrewMember")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxLotsForCrew")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("GameAccountId");

                    b.ToTable("Characters", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.ClusterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("CrewId")
                        .HasColumnType("integer");

                    b.Property<int?>("GameAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<int>("Planet")
                        .HasColumnType("integer");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<string>("Waypoint")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.HasIndex("GameAccountId");

                    b.HasIndex("ResourceId");

                    b.ToTable("Clusters", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CrewLeaderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("CrewLeaderId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Crews", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewInvitationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FromAccountId")
                        .HasColumnType("integer");

                    b.Property<bool>("InviteOrRequestToJoin")
                        .HasColumnType("boolean");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("ToAccountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromAccountId");

                    b.HasIndex("ToAccountId");

                    b.ToTable("CrewInvitations", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.GameAccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("OwnerAppAccountId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerAppAccountId");

                    b.ToTable("GameAccounts", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.NamedSeriesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Counter")
                        .IsConcurrencyToken()
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NamedSeries", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.ResourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AvailableSince")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CD")
                        .HasColumnType("integer");

                    b.Property<int>("CI0")
                        .HasColumnType("integer");

                    b.Property<int>("CI1")
                        .HasColumnType("integer");

                    b.Property<int>("CI2")
                        .HasColumnType("integer");

                    b.Property<int>("CI3")
                        .HasColumnType("integer");

                    b.Property<int>("CI4")
                        .HasColumnType("integer");

                    b.Property<int>("CI5")
                        .HasColumnType("integer");

                    b.Property<int>("CI6")
                        .HasColumnType("integer");

                    b.Property<int>("CI7")
                        .HasColumnType("integer");

                    b.Property<int>("CR")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryIndex")
                        .HasColumnType("integer");

                    b.Property<int>("DR")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DepletedSince")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ER")
                        .HasColumnType("integer");

                    b.Property<int>("FL")
                        .HasColumnType("integer");

                    b.Property<int>("GameServerId")
                        .HasColumnType("integer");

                    b.Property<int>("HR")
                        .HasColumnType("integer");

                    b.Property<int>("MA")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("OQ")
                        .HasColumnType("integer");

                    b.Property<int>("PE")
                        .HasColumnType("integer");

                    b.Property<int>("Planets")
                        .HasColumnType("integer");

                    b.Property<string>("ReportedBy")
                        .HasColumnType("text");

                    b.Property<int>("SR")
                        .HasColumnType("integer");

                    b.Property<int>("SWGAideId")
                        .HasColumnType("integer");

                    b.Property<int>("UT")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameServerId", "CI0");

                    b.HasIndex("GameServerId", "CI1");

                    b.HasIndex("GameServerId", "CI2");

                    b.HasIndex("GameServerId", "CI3");

                    b.HasIndex("GameServerId", "CI4");

                    b.HasIndex("GameServerId", "CI5");

                    b.HasIndex("GameServerId", "CI6");

                    b.HasIndex("GameServerId", "CI7");

                    b.HasIndex("GameServerId", "CategoryIndex");

                    b.HasIndex("GameServerId", "DepletedSince");

                    b.HasIndex("GameServerId", "Name")
                        .IsUnique();

                    b.HasIndex("GameServerId", "SWGAideId")
                        .IsUnique();

                    b.ToTable("Resources", (string)null);
                });

            modelBuilder.Entity("SWGIndustries.Data.AppAccountEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.CrewEntity", "Crew")
                        .WithMany("Members")
                        .HasForeignKey("CrewId");

                    b.Navigation("Crew");
                });

            modelBuilder.Entity("SWGIndustries.Data.BuildingEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.ClusterEntity", "Cluster")
                        .WithMany("Buildings")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("SWGIndustries.Data.ResourceEntity", "HarvestingResource")
                        .WithMany()
                        .HasForeignKey("HarvestingResourceId");

                    b.HasOne("SWGIndustries.Data.GameAccountEntity", "Owner")
                        .WithMany("Buildings")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SWGIndustries.Data.CharacterEntity", "PutDownBy")
                        .WithMany("PutDownBuildings")
                        .HasForeignKey("PutDownById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cluster");

                    b.Navigation("HarvestingResource");

                    b.Navigation("Owner");

                    b.Navigation("PutDownBy");
                });

            modelBuilder.Entity("SWGIndustries.Data.CharacterEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.GameAccountEntity", "GameAccount")
                        .WithMany("Characters")
                        .HasForeignKey("GameAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GameAccount");
                });

            modelBuilder.Entity("SWGIndustries.Data.ClusterEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.CrewEntity", "Crew")
                        .WithMany("Clusters")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SWGIndustries.Data.GameAccountEntity", "GameAccount")
                        .WithMany("Clusters")
                        .HasForeignKey("GameAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SWGIndustries.Data.ResourceEntity", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");

                    b.Navigation("Crew");

                    b.Navigation("GameAccount");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.AppAccountEntity", "CrewLeader")
                        .WithMany()
                        .HasForeignKey("CrewLeaderId");

                    b.Navigation("CrewLeader");
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewInvitationEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.AppAccountEntity", "FromAccount")
                        .WithMany()
                        .HasForeignKey("FromAccountId");

                    b.HasOne("SWGIndustries.Data.AppAccountEntity", "ToAccount")
                        .WithMany()
                        .HasForeignKey("ToAccountId");

                    b.Navigation("FromAccount");

                    b.Navigation("ToAccount");
                });

            modelBuilder.Entity("SWGIndustries.Data.GameAccountEntity", b =>
                {
                    b.HasOne("SWGIndustries.Data.AppAccountEntity", "OwnerAppAccount")
                        .WithMany("GameAccounts")
                        .HasForeignKey("OwnerAppAccountId");

                    b.Navigation("OwnerAppAccount");
                });

            modelBuilder.Entity("SWGIndustries.Data.AppAccountEntity", b =>
                {
                    b.Navigation("GameAccounts");
                });

            modelBuilder.Entity("SWGIndustries.Data.CharacterEntity", b =>
                {
                    b.Navigation("PutDownBuildings");
                });

            modelBuilder.Entity("SWGIndustries.Data.ClusterEntity", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("SWGIndustries.Data.CrewEntity", b =>
                {
                    b.Navigation("Clusters");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("SWGIndustries.Data.GameAccountEntity", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Characters");

                    b.Navigation("Clusters");
                });
#pragma warning restore 612, 618
        }
    }
}
